/*
 * Copyright (c) 2016 Boulanger Guillaume, Chathura Namalgamuwa
 * The file is distributed under the MIT license
 * The license is available in the LICENSE file or at https://github.com/boulangg/phoenix/blob/master/LICENSE
 */

#ifndef LIB_LIBSTDCPP_INCLUDE_TYPE_TRAITS_
#define LIB_LIBSTDCPP_INCLUDE_TYPE_TRAITS_

namespace std
{

template< class T > struct remove_reference      {typedef T type;};
template< class T > struct remove_reference<T&>  {typedef T type;};
template< class T > struct remove_reference<T&&> {typedef T type;};

template <class T, T v>
struct integral_constant {
	static constexpr T value = v;
	typedef T value_type;
	typedef integral_constant<T,v> type;
	constexpr operator T() { return v; }
};

typedef integral_constant<bool,true> true_type;
typedef integral_constant<bool,false> false_type;

}



#endif /* LIB_LIBSTDCPP_INCLUDE_TYPE_TRAITS_ */
