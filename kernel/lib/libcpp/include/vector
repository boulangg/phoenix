/*
 * Copyright (c) 2016 Boulanger Guillaume, Chathura Namalgamuwa
 * The file is distributed under the MIT license
 * The license is available in the LICENSE file or at https://github.com/boulangg/phoenix/blob/master/LICENSE
 */

#ifndef PHOENIX_VECTOR_H
#define PHOENIX_VECTOR_H

#define DEFAULT_CAPACITY 4

#include <cstddef>

namespace std {

template <class T>
class vector {
public:
	typedef T value_type;
	typedef value_type& reference;
	typedef const reference const_reference;
	typedef value_type* pointer;
	typedef size_t size_type;

	vector();
	~vector();

	reference operator[](int pos) const;

	reference front();
	reference back();

	void push_back(const_reference val);
	void push_back(value_type&& val);
	void pop_back();

	size_type size() const;
	bool empty() const;

private:
	void resize();

	size_type _capacity;
	size_type _size;
	value_type* _data;
};

#include "internal/vector.tpp"

}



#endif //PHOENIX_VECTOR_H
